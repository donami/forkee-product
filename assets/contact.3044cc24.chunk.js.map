{"version":3,"sources":["C:/dev/forkee-product/src/components/Hero/Hero.js","C:/dev/forkee-product/src/components/UI/Input.js","C:/dev/forkee-product/src/routes/contact/Contact.js","C:/dev/forkee-product/src/routes/contact/index.js"],"names":["Hero","_ref","title","children","bottom","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","Wrapper","_UI_Container__WEBPACK_IMPORTED_MODULE_4__","Content","className","defaultProps","undefined","__webpack_exports__","styled_components__WEBPACK_IMPORTED_MODULE_2__","div","withConfig","componentId","props","theme","margin","colors","primary","Object","polished__WEBPACK_IMPORTED_MODULE_3__","Input","styled_components__WEBPACK_IMPORTED_MODULE_0__","input","fluid","formSchema","lib","shape","name","min","required","message","email","contact_Contact","_useState2","_slicedToArray","react","submitted","setSubmitted","react_default","ContactContainer","Container","formik_esm","initialValues","validationSchema","onSubmit","values","actions","setSubmitting","render","handleSubmit","handleChange","handleBlur","errors","touched","ContactForm","Submitted","Field","Feedback","id","type","onChange","onBlur","value","as","Button","styled_components_browser_esm","form","polished_es","chunks","component","Layout"],"mappings":"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","file":"contact.3044cc24.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { stripUnit } from 'polished';\n\nimport Container from '../UI/Container';\n\nconst Hero = ({ title, children, bottom }) => (\n  <Wrapper>\n    <Container>\n      <Content className=\"hero-content\">\n        <h1 className=\"hero-heading\">{title}</h1>\n        <div className=\"hero-body\">{children}</div>\n        {bottom && <div className=\"hero-bottom\">{bottom}</div>}\n      </Content>\n    </Container>\n  </Wrapper>\n);\n\nHero.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,\n  children: PropTypes.node.isRequired,\n  bottom: PropTypes.node,\n};\n\nHero.defaultProps = {\n  bottom: undefined,\n};\n\nexport default Hero;\n\nconst Wrapper = styled.div`\n  margin-bottom: ${props => props.theme.margin};\n`;\n\nconst Content = styled.div`\n  width: 70%;\n  text-align: center;\n  font-size: 1em;\n  margin: 0 auto;\n\n  h1 {\n    font-size: 2.8em;\n    font-weight: 400;\n    margin-bottom: 10px;\n\n    span {\n      color: ${props => props.theme.colors.primary};\n    }\n  }\n\n  p {\n    font-size: 1.1em;\n    letter-spacing: 0.1em;\n    line-height: 1.5em;\n  }\n\n  .hero-body {\n    margin-bottom: 30px;\n  }\n\n  .hero-bottom {\n    input {\n      min-width: 40%;\n      margin-right: ${props => stripUnit(props.theme.margin) / 2}px;\n    }\n  }\n`;\n","import styled, { css } from 'styled-components';\n\nconst Input = styled.input`\n  background-color: #fff;\n  padding: 10px 15px;\n  font-family: 'Poppins', Arial, Helvetica, sans-serif;\n  border: #eaeaea 1px solid;\n  outline: 0;\n  margin-bottom: 10px;\n  color: #636e72;\n  border-radius: 3px;\n\n  ${props =>\n    props.fluid &&\n    css`\n      width: calc(100% - 30px);\n    `} &:focus {\n    border-color: #85b7d9;\n    box-shadow: 0 0 0 0 rgba(34, 36, 38, 0.35) inset;\n  }\n`;\n\nexport default Input;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { stripUnit } from 'polished';\n\nimport Container from '../../components/UI/Container';\nimport Input from '../../components/UI/Input';\nimport Button from '../../components/UI/Button';\nimport Hero from '../../components/Hero/Hero';\n\nconst formSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Name is too short!')\n    .required('Name is required'),\n  message: Yup.string()\n    .min(2, 'Message is too short!')\n    .required('Message is required'),\n  email: Yup.string()\n    .email('Email is not valid')\n    .required('Email is required'),\n});\n\nconst Contact = () => {\n  const [submitted, setSubmitted] = useState(false);\n\n  return (\n    <ContactContainer>\n      <Container>\n        <Hero title=\"Give us a shout.\">Let us know how we can help.</Hero>\n\n        <Formik\n          initialValues={{ name: '', email: '', message: '' }}\n          validationSchema={formSchema}\n          onSubmit={(values, actions) => {\n            setSubmitted(true);\n            actions.setSubmitting(false);\n          }}\n          render={({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            errors,\n            touched,\n          }) => (\n            <ContactForm onSubmit={handleSubmit}>\n              {submitted && (\n                <Submitted>\n                  Thank you for your message! We will get back to you as soon as\n                  possible.\n                </Submitted>\n              )}\n\n              <Field>\n                {errors.name &&\n                  touched.name && <Feedback>{errors.name}</Feedback>}\n                <h4>Name</h4>\n                <Input\n                  fluid\n                  id=\"name\"\n                  type=\"text\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.name}\n                  name=\"name\"\n                />\n              </Field>\n\n              <Field>\n                {errors.email &&\n                  touched.email && <Feedback>{errors.email}</Feedback>}\n                <h4>Email</h4>\n                <Input\n                  fluid\n                  type=\"text\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                  name=\"email\"\n                />\n              </Field>\n              <Field>\n                {errors.message &&\n                  touched.message && <Feedback>{errors.message}</Feedback>}\n                <h4>Message</h4>\n                <Input\n                  as=\"textarea\"\n                  fluid\n                  type=\"text\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.message}\n                  name=\"message\"\n                />\n              </Field>\n              <Button type=\"submit\" primary>\n                Send\n              </Button>\n            </ContactForm>\n          )}\n        />\n      </Container>\n    </ContactContainer>\n  );\n};\n\nexport default Contact;\n\nconst ContactContainer = styled.div``;\n\nconst ContactForm = styled.form`\n  margin: 0 auto;\n  margin-bottom: ${props => props.theme.margin};\n  max-width: 400px;\n`;\n\nconst Field = styled.div`\n  margin-bottom: ${props => stripUnit(props.theme.margin) / 2};\n`;\n\nconst Feedback = styled.div`\n  float: right;\n  color: ${props => props.theme.colors.primary};\n`;\n\nconst Submitted = styled.div`\n  margin-bottom: ${props => props.theme.margin};\n`;\n","import React from 'react';\nimport Layout from '../../components/Layout';\nimport Contact from './Contact';\n\nconst title = 'Contact Us';\n\nfunction action() {\n  return {\n    chunks: ['contact'],\n    title,\n    component: (\n      <Layout>\n        <Contact title={title} />\n      </Layout>\n    ),\n  };\n}\n\nexport default action;\n"],"sourceRoot":""}